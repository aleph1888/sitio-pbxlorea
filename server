#!/usr/bin/env python
import os
import sys
import json
root_dir = os.path.dirname(os.path.realpath(sys.argv[0]))
sys.path.insert(0, os.path.join(root_dir, 'lib'))

from gevent.pywsgi import WSGIServer

from flask import Flask
from flask import request, redirect, url_for, abort, session
from flask import render_template, jsonify
from werkzeug.utils import html

from tenjin import Engine
from tenjin.helpers import *

from pbxcore.config import config
from pbxcore.tools.templates_jade import print_template

import traceback

################################################
# Setup tenjin, flask and pbxcore
Tenjin = Engine(postfix='.pyhtml', preprocess=True, path=[os.path.join(root_dir, 'views','tenjin')])
Flask.secret_key = "foo"
if not 'root' in config:
    config['root'] = root_dir

################################################
# Setup Application
app = Flask(__name__,
            template_folder=os.path.join(os.path.dirname(__file__), 'views', 'jade'))
app.debug = True
#app.config.from_pyfile('config.cfg')
app.jinja_env.add_extension('pyjade.ext.jinja.PyJadeExtension')


################################################
# Template views

@app.route('/jade/<tpl_name>')
def page_jade(tpl_name):
    data = {}
    data['user'] = {"name":"Lamevamara", "number": '000010717', 'credit': '1.23'};
    try:
        return print_template(tpl_name, {}, request.args)
    except Exception, e:
       return '<h2>'+str(e) + '</h2><pre>'+traceback.format_exc()+'</pre>'

@app.route('/tenjin/<tpl_name>')
def page_tenjin(tpl_name):
    params = { 'id': 1234, 'name': 'Foo', 'lang': 'ch' }
    context = { 'params': params }

    output = Tenjin.render(':'+tpl_name, context);
    return output


################################################
# Base app views

@app.route('/')
def page_root():
    return print_template('about', {}, {})
    #return render_template('about.jade')

@app.route('/tenjin')
def redirect_tenjin():
    return redirect('/tenjin/main')

@app.route('/jade')
def redirect_jade():
    return redirect('/jade/user')


################################################
# Introspection views

@app.route('/modules')
def print_modules():
    return html.pre(str(sys.modules))


################################################
# Error handlers

@app.errorhandler(404)
def page_not_found(error):
    return print_template('404', {}, {}), 404


################################################
# Main function

if __name__ == '__main__':
    http_server = WSGIServer(('', 8001), app)
    http_server.serve_forever()


